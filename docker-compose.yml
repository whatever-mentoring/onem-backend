version: '3.8'

services:
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - "9090:9090"
    networks:
      - shortenurl-network
    deploy:
      replicas: 1

  grafana:
    image: grafana/grafana:latest
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
    volumes:
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./dashboards:/var/lib/grafana/dashboards
    ports:
      - "3000:3000"
    networks:
      - shortenurl-network
    depends_on:
      - influxdb
    deploy:
      replicas: 1

  node-exporter:
    image: prom/node-exporter:latest
    ports:
      - "9100:9100"
    networks:
      - shortenurl-network
    deploy:
      replicas: 1

  shortenurl:
    image: seeeeeeong/shortenurl-image
    ports:
      - "8080:8080"
    env_file:
      - .env
    depends_on:
      - mysql
    networks:
      - shortenurl-network
    deploy:
      replicas: 3
      resources:
        limits:
          cpus: "2.0"
          memory: "1GB"

  mysql:
    image: mysql:8.0.41
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: shortenurl
    ports:
      - "3306:3306"
    networks:
      - shortenurl-network
    volumes:
      - ./sql-scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    deploy:
      replicas: 1

  influxdb:
    image: influxdb:1.8
    ports:
      - "8086:8086"
    environment:
      - INFLUXDB_DB=k6
      - INFLUXDB_ADMIN_USER=admin
      - INFLUXDB_ADMIN_PASSWORD=admin
      - INFLUXDB_HTTP_AUTH_ENABLED=false
      - INFLUXDB_HTTP_MAX_BODY_SIZE=50MB
    networks:
      - shortenurl-network
    volumes:
      - influxdb_data:/var/lib/influxdb
    deploy:
      replicas: 1

  k6:
    image: grafana/k6
    container_name: k6
    volumes:
      - ./k6-scripts/get-origin-url.js:/script.js
    networks:
      - shortenurl-network
    depends_on:
      - influxdb
    entrypoint: [ "sleep", "infinity" ]
    deploy:
      replicas: 1

networks:
  shortenurl-network:
    driver: overlay

volumes:
  influxdb_data:
